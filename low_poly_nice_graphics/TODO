DONE 1: Create window (winit) add gameloop and render triangle, with fixed camera, ability to close window
DONE 3: Add Asset implementation so meshes have handles and can be assigned to entities.
DONE 4: Add Entity implementation
DONE 2: Generate simple noisy terrain still with fixed camera
DONE 9: Update to wgpu 0.7
DONE 7: Start lighting implementation to have good looking low poly graphics
[x] implement basic spot / directional / point with specular/diffuse/amient (light and material)
[x] define a light in rust which automatically uploads to gpu (uniform buffer array)
DONE 11: Implement seperate pipeline for rendering the lights
[x] finish mesh from cube which represents the lights
[x] move model matrix to instance data
[x] finish seperate pipeline implementation
[x] render multiple lights
[x] render lights using instanced rendering
DONE 11: Refactor instanced rendering and light / entities
[x] variable multiple lights
[x] make adding entities and lights awesome
DONE 8: Move model data to instance data and add instance data to gpu (instances rendering)
DONE 11: Move from nalgebra_glm to glam
DONE 10: advanced light rendering
[x] add blinn-phong
[x] add gamma correction
DONE 14: Unit which moves through the world
[x] wasd keys move unit
[x] fix bug a and d both go to positive x
DONE 16: IcoSphere (icosahedron) mesh implementation
DONE 5: Add transform implementation and can be added to entities
DONE 13: Implement camera follow/rotate around/zoom/change angle unit
[x] follow
[x] zoom using scroll wheel and touchpad
[x] change angle y with mouse
DONE 19: Tile based rendering
[x] generate tiles from masks
DONE 21: Basic Gltf loader
DONE 22: Load tiles from gltf file
DONE 20: Load map from image (use colors from grass stone in image and generate world from that)
DONE 17: Basic physics, walking around with sphere and hitting cubes and sliding off
[x] add cube and player sphere to physics world
[x] detect collision with cube and player sphere
DONE 23: Render heightmap
[x] render heightmap from image quick and dirty
[x] add heightmap to physics engine
TODO 28: Render voxels naive / try greedy meshing / measure difference
[x] Render naive voxel world
[] create bigger test scene with generated voxels from heightmap and a few vox models
[] measure naive implementation
[] start on greedy  meshing
TODO 27: Render height map in correct way with streaming, make height map irregular by removing points randomly
TODO 15: Terrain generation using blue noise (can be implemented using poison disc sampling, use blue noise texture from noise-test) voronoi redblobgames
TODO 25: Character animation
TODO 24: sync rotation of Transform between entity and physics // check bevy_rapier
TODO 12: Advanced light rendering shadow mapping
[] render depth buffer of camera
[] render depth buffer of light
[] use depth buffer of light for shadow mapping
TODO 6: Add Graph so entities can have parent child relation
TODO 18: Check if MainEventsCleared is a better place to do all redrawing iso RedrawRequested (or maybe only physics update)
TODO 26: Figure out voxel rendering big world
[] try use meshing 32x32x32 chunks
